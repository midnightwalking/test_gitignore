<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qiuzhi.dao.mapper.ReplyMapper">
  <resultMap id="BaseResultMap" type="com.vo.Reply">
    <id column="REPLY_ID" jdbcType="VARCHAR" property="replyId" />
    <result column="RELATIVE_ARTICLEID" jdbcType="VARCHAR" property="relativeArticleid" />
    <result column="REPLY_NAME" jdbcType="VARCHAR" property="replyName" />
    <result column="REPLY_CONTENT" jdbcType="VARCHAR" property="replyContent" />
    <result column="REPLY_TIME" jdbcType="TIMESTAMP" property="replyTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    REPLY_ID, RELATIVE_ARTICLEID, REPLY_NAME, REPLY_CONTENT, REPLY_TIME
  </sql>
  <select id="selectByExample" parameterType="com.vo.ReplyExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from reply
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
    <if test="forUpdate != null and forUpdate == true">
      for update
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from reply
    where REPLY_ID = #{replyId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from reply
    where REPLY_ID = #{replyId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.vo.ReplyExample">
    delete from reply
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.vo.Reply">
    insert into reply (REPLY_ID, RELATIVE_ARTICLEID, REPLY_NAME, 
      REPLY_CONTENT, REPLY_TIME)
    values (#{replyId,jdbcType=VARCHAR}, #{relativeArticleid,jdbcType=VARCHAR}, #{replyName,jdbcType=VARCHAR}, 
      #{replyContent,jdbcType=VARCHAR}, #{replyTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.vo.Reply">
    insert into reply
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="replyId != null">
        REPLY_ID,
      </if>
      <if test="relativeArticleid != null">
        RELATIVE_ARTICLEID,
      </if>
      <if test="replyName != null">
        REPLY_NAME,
      </if>
      <if test="replyContent != null">
        REPLY_CONTENT,
      </if>
      <if test="replyTime != null">
        REPLY_TIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="replyId != null">
        #{replyId,jdbcType=VARCHAR},
      </if>
      <if test="relativeArticleid != null">
        #{relativeArticleid,jdbcType=VARCHAR},
      </if>
      <if test="replyName != null">
        #{replyName,jdbcType=VARCHAR},
      </if>
      <if test="replyContent != null">
        #{replyContent,jdbcType=VARCHAR},
      </if>
      <if test="replyTime != null">
        #{replyTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.vo.ReplyExample" resultType="java.lang.Long">
    select count(*) from reply
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update reply
    <set>
      <if test="record.replyId != null">
        REPLY_ID = #{record.replyId,jdbcType=VARCHAR},
      </if>
      <if test="record.relativeArticleid != null">
        RELATIVE_ARTICLEID = #{record.relativeArticleid,jdbcType=VARCHAR},
      </if>
      <if test="record.replyName != null">
        REPLY_NAME = #{record.replyName,jdbcType=VARCHAR},
      </if>
      <if test="record.replyContent != null">
        REPLY_CONTENT = #{record.replyContent,jdbcType=VARCHAR},
      </if>
      <if test="record.replyTime != null">
        REPLY_TIME = #{record.replyTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update reply
    set REPLY_ID = #{record.replyId,jdbcType=VARCHAR},
      RELATIVE_ARTICLEID = #{record.relativeArticleid,jdbcType=VARCHAR},
      REPLY_NAME = #{record.replyName,jdbcType=VARCHAR},
      REPLY_CONTENT = #{record.replyContent,jdbcType=VARCHAR},
      REPLY_TIME = #{record.replyTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.vo.Reply">
    update reply
    <set>
      <if test="relativeArticleid != null">
        RELATIVE_ARTICLEID = #{relativeArticleid,jdbcType=VARCHAR},
      </if>
      <if test="replyName != null">
        REPLY_NAME = #{replyName,jdbcType=VARCHAR},
      </if>
      <if test="replyContent != null">
        REPLY_CONTENT = #{replyContent,jdbcType=VARCHAR},
      </if>
      <if test="replyTime != null">
        REPLY_TIME = #{replyTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where REPLY_ID = #{replyId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.vo.Reply">
    update reply
    set RELATIVE_ARTICLEID = #{relativeArticleid,jdbcType=VARCHAR},
      REPLY_NAME = #{replyName,jdbcType=VARCHAR},
      REPLY_CONTENT = #{replyContent,jdbcType=VARCHAR},
      REPLY_TIME = #{replyTime,jdbcType=TIMESTAMP}
    where REPLY_ID = #{replyId,jdbcType=VARCHAR}
  </update>
</mapper>